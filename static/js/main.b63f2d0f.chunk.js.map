{"version":3,"sources":["components/Nav.js","img/rick-and-morty.png","components/Header.js","components/Card.js","components/Loader.js","App.js","index.js"],"names":["Nav","useState","nav","setNav","className","onClick","href","target","rel","Header","props","src","RM","alt","Card","name","image","status","specie","gender","style","backgroundColor","Loader","App","state","characters","loading","page","fetchCharacters","a","getCharacter","chars","setState","concat","results","console","log","this","dataLength","length","next","hasMore","loader","map","char","species","id","Component","$root","document","getElementById","ReactDOM","render"],"mappings":"kVA2BeA,EAxBH,WAAO,IAAD,EACUC,oBAAS,GADnB,mBACNC,EADM,KACDC,EADC,KAGd,OACI,gCACI,qBAAKC,UAAU,YAAYC,QAAS,kBAAMF,GAAQD,IAAlD,SAEQA,EAAM,cAAC,IAAD,IAAc,cAAC,IAAD,MAG5B,qBAAIE,UAAS,oBAAeF,EAAM,SAAW,IAA7C,UAEI,oBAAIE,UAAS,UAAKF,EAAM,OAAS,IAAjC,SACI,mBAAGI,KAAK,8CAA8CC,OAAO,SAASC,IAAI,aAA1E,sBAEJ,oBAAIJ,UAAS,UAAKF,EAAM,OAAS,IAAjC,SACI,mBAAGI,KAAK,mCAAmCC,OAAO,SAASC,IAAI,aAA/D,+BCnBL,MAA0B,2CCgB1BC,EAXA,SAACC,GACZ,OACI,iCACI,gCACI,qBAAKN,UAAU,OAAOO,IAAKC,EAAIC,IAAI,mBACnC,cAAC,EAAD,UCQDC,EAhBF,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,OACzC,OACI,sBAAKf,UAAU,OAAf,UACI,sBAAKA,UAAU,cAAf,UACI,qBAAKA,UAAU,SAASgB,MAAO,CAAEC,gBAA4B,UAAXJ,EAAqB,OAAS,UAChF,qBAAKN,IAAKK,EAAOH,IAAKE,OAE1B,sBAAKX,UAAU,YAAf,UACI,6BAAKW,IACL,yCAAYG,KACZ,yCAAYC,YCMbG,EAhBA,SAACZ,GACZ,OACI,sBAAKN,UAAU,WAAf,UACI,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,4BCFSmB,G,wNACjBC,MAAQ,CACJC,WAAY,GACZC,SAAS,EACTC,KAAM,G,EAGVC,gB,uCAAkB,WAAOD,GAAP,eAAAE,EAAA,+EAEUC,uBAAa,CAAEH,SAFzB,OAEJI,EAFI,OAGV,EAAKC,SAAL,2BACO,EAAKR,OADZ,IAEIE,SAAS,EACTD,WAAY,GAAGQ,OAAO,EAAKT,MAAMC,WAAYM,EAAMG,SACnDP,KAAM,EAAKH,MAAMG,KAAO,KAPlB,gDAUVQ,QAAQC,IAAR,MAVU,yD,6GAclB,WACIC,KAAKT,gBAAgBS,KAAKb,MAAMG,Q,oBAGpC,WAAU,IAAD,OACL,OACI,qCACI,cAAC,EAAD,IACA,cAAC,IAAD,CACIW,WAAYD,KAAKb,MAAMC,WAAWc,OAClCC,KAAM,kBAAM,EAAKZ,gBAAgB,EAAKJ,MAAMG,OAC5Cc,SAAS,EACTC,OAAQ,cAAC,EAAD,IAJZ,SAMI,yBAAStC,UAAU,YAAnB,SACMiC,KAAKb,MAAMC,WAAWkB,KAAI,SAAAC,GACxB,OAAO,cAAC,EAAD,CAEH7B,KAAM6B,EAAK7B,KACXC,MAAO4B,EAAK5B,MACZC,OAAQ2B,EAAK3B,OACbC,OAAQ0B,EAAKC,QACb1B,OAAQyB,EAAKzB,QALRyB,EAAKE,kB,GAtCTC,cCN3BC,EAAQC,SAASC,eAAe,QAEtCC,IAASC,OAAO,cAAC,EAAD,IAASJ,K","file":"static/js/main.b63f2d0f.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { FaTimes, FaBars } from 'react-icons/fa';\r\n\r\nconst Nav = () => {\r\n    const [ nav, setNav ] = useState(false);\r\n\r\n    return(\r\n        <nav>\r\n            <div className=\"hamburger\" onClick={() => setNav(!nav)}>\r\n                {\r\n                    nav ? <FaTimes /> : <FaBars />\r\n                }\r\n            </div>\r\n            <ul className={`nav-links ${nav ? 'active' : ''}`} >\r\n            \r\n                <li className={`${nav ? 'open' : ''}`}>\r\n                    <a href=\"https://github.com/angelmgl/rick-and-morty/\" target=\"_blank\" rel=\"noreferrer\">Github</a>\r\n                </li>\r\n                <li className={`${nav ? 'open' : ''}`}>\r\n                    <a href=\"https://twitter.com/angelmgljpr/\" target=\"_blank\" rel=\"noreferrer\">See more</a>\r\n                </li>\r\n            \r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav;","export default __webpack_public_path__ + \"static/media/rick-and-morty.5b11b123.png\";","import React from 'react';\r\n\r\nimport Nav from './Nav';\r\nimport RM from '../img/rick-and-morty.png';\r\n\r\nconst Header = (props) => {\r\n    return(\r\n        <header>\r\n            <div>\r\n                <img className=\"logo\" src={RM} alt=\"Rick and Morty\" />\r\n                <Nav />\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Card = ({ name, image, status, specie, gender }) => {\r\n    return(\r\n        <div className=\"card\">\r\n            <div className=\"card-header\">\r\n                <div className=\"status\" style={{ backgroundColor: status === \"Alive\" ? \"#0f0\" : \"#f00\"}} />\r\n                <img src={image} alt={name} />\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <h2>{name}</h2>\r\n                <p>Specie: {specie}</p>\r\n                <p>Gender: {gender}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nconst Loader = (props) => {\r\n    return(\r\n        <div className=\"lds-grid\">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader;","import React, { Component } from 'react';\r\nimport { getCharacter } from 'rickmortyapi';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\n\r\nimport Header from './components/Header';\r\nimport Card from './components/Card';\r\nimport Loader from './components/Loader';\r\n\r\nimport './style.css';\r\nimport './normalize.css';\r\n\r\nexport default class App extends Component {\r\n    state = {\r\n        characters: [],\r\n        loading: true,\r\n        page: 1\r\n    }\r\n\r\n    fetchCharacters = async (page) => {\r\n        try {\r\n            const chars = await getCharacter({ page });\r\n            this.setState({\r\n                ...this.state,\r\n                loading: false,\r\n                characters: [].concat(this.state.characters, chars.results),\r\n                page: this.state.page + 1\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchCharacters(this.state.page);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n                <Header />\r\n                <InfiniteScroll\r\n                    dataLength={this.state.characters.length}\r\n                    next={() => this.fetchCharacters(this.state.page)}\r\n                    hasMore={true} \r\n                    loader={<Loader />} >\r\n                {\r\n                    <section className=\"container\">\r\n                        { this.state.characters.map(char => {\r\n                            return <Card \r\n                                key={char.id}\r\n                                name={char.name}\r\n                                image={char.image}\r\n                                status={char.status}\r\n                                specie={char.species}\r\n                                gender={char.gender} />\r\n                        })}\r\n                    </section>\r\n                } \r\n                </InfiniteScroll>\r\n            </>\r\n        );\r\n    }\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from \"./App\";\r\n\r\nconst $root = document.getElementById('root');\r\n\r\nReactDOM.render(<App />, $root);"],"sourceRoot":""}